[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Forest plots in R",
    "section": "",
    "text": "Welcome\nThis website is a small collection of forest plots made in R using the forestploter package. Details and documentation of the package can be found here (where the function get_wh is presented - this is useful for saving plots) or here.\nReaders are advised to start walking through A simple forest plot before looking into the slightly more advanced examples.\nThe data used for these plots can be found here.\nFor completeness, the simple plot has been recreated (more or less) using ggplot2 and patchwork. This is done mostly to demonstrate that it is a possibility, and to highlight some challenges one might face using these otherwise magnificent packages.\n\n\nThe plots\nThe website provides the code necessary to construct the following plots. Please be advised that the chosen colors are not necessarily good, and the reader is encouraged to select colors in a sensible way. The default settings, with alternating grey/white colors for stripes and black dots and lines used in the forest plot, are perfectly fine to use.\n\nA simple plot\n\n\n\n\n\n\n\n\nFigure 1: Simple forest plot of risk ratios\n\n\n\n\n\n\n\nA figure containing two forest plots\n\n\n\n\n\n\n\n\nFigure 2: Forest plot including risk ratios and -differences\n\n\n\n\n\n\n\nSeveral exposure groups, long format\n\n\n\n\n\n\n\n\nFigure 3: Forest plot with 3 exposure groups, long format\n\n\n\n\n\n\n\nSeveral exposure groups, wide format\n\n\n\n\n\n\n\n\nFigure 4: Forest plot with 3 exposure groups, wide format\n\n\n\n\n\n\n\nThe simple plot recreated using ggplot2 and patchwork\n\n\n\n\n\n\n\n\nFigure 5: The simple forest plot recreated using ggplot2 and patchwork\n\n\n\n\n\n\n\n\n\n\nThe site was built on 12 jun 2025 using R version 4.5.0 (2025-04-11 ucrt), and the following packages (version): forestploter (1.1.3), grid (4.5.0), data.table (1.17.0), dplyr (1.1.4), ggplot2 (3.5.2), and patchwork (1.3.0).",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "ThreeGroupsV2.html",
    "href": "ThreeGroupsV2.html",
    "title": "Three exposure groups - wide version",
    "section": "",
    "text": "Setting\nHere is an example of a forest plot containing combined results of risk ratios for a comparison of three exposure groups (high dose, low dose, control, say) from a hypothetical study. These data are in wide format, there is also a version in long format. Some familiarity with the forestploter package is assumed. The reader might want to look at the simple forest plot before continuing.\n\n\nData\nThis version of the data is in wide format, meaning each exposure group contributes with a set of columns/variables rather than rows/observations.\n\nlibrary(forestploter)\nlibrary(grid)\nlibrary(data.table)\nlibrary(dplyr)\n\nresults &lt;- fread(\"./data/TwoComparisonFPdatawide.csv\")\n\n# point estimates and confidence interval limits for comparisons of groups 1 and 2 against group 0\nprint(results[,c(1,11:16)], digits = 5)\n\n            level     rr1    lcl1    ucl1     rr2    lcl2   ucl2\n           &lt;char&gt;   &lt;num&gt;   &lt;num&gt;   &lt;num&gt;   &lt;num&gt;   &lt;num&gt;  &lt;num&gt;\n 1:       Overall 0.67524 0.62828 0.72571 0.99663 0.90424 1.0985\n 2:           Sex      NA      NA      NA      NA      NA     NA\n 3:        Female 0.63160 0.56358 0.70783 0.94637 0.81198 1.1030\n 4:          Male 0.70788 0.64498 0.77690 1.03680 0.91418 1.1759\n 5:           Age      NA      NA      NA      NA      NA     NA\n 6:     &lt;65 years 1.09769 0.77075 1.56331 1.02005 0.59393 1.7519\n 7:     &gt;65 years 0.66181 0.61565 0.71142 0.99665 0.90509 1.0975\n 8: Heart failure      NA      NA      NA      NA      NA     NA\n 9:            No 0.62879 0.57607 0.68634 1.04443 0.93230 1.1700\n10:           Yes 0.82604 0.73261 0.93138 0.90706 0.75787 1.0856\n11:  Hypertension      NA      NA      NA      NA      NA     NA\n12:            No 0.62567 0.53434 0.73261 1.02799 0.83739 1.2620\n13:           Yes 0.68834 0.63483 0.74637 0.98778 0.88456 1.1030\n\n\nAs in the other examples presented at this site, the data needs a bit of editing before it is ready to be plugged into forest.\n\nround2 &lt;- function(x) format(round(x,digits = 2), nsmall = 2, scientific = FALSE)\n\nresults &lt;- results |&gt;\n  mutate(\n    # events / Number at risk\n    en1 = case_when(is.na(events1) ~ \"\", .default = paste(events1, \"/\", n1)),\n    en2 = case_when(is.na(events2) ~ \"\", .default = paste(events2, \"/\", n2)),\n    en0 = case_when(is.na(events0) ~ \"\", .default = paste(events0, \"/\", n0)),\n    \n    # text variable with risk ratios\n    riskratio1 = case_when(\n      is.na(events1) ~ \"\",\n      .default = paste0(round2(rr1), \" (\", round2(lcl1), \" - \", round2(ucl1), \")\")),\n    riskratio2 = case_when(\n      is.na(events2) ~ \"\",\n      .default = paste0(round2(rr2), \" (\", round2(lcl2), \" - \", round2(ucl2), \")\")),\n    \n    # some indentation of some labels\n    level = case_when(is.na(events1) | level == \"Overall\" ~ level, .default = paste(\" \", level))\n  ) |&gt;\n  # since there will be many columns, estimates of absolute risks are suppressed\n  select(level, starts_with(c(\"en\", \"riskratio\", \"rr\", \"lcl\", \"ucl\")))\n\n# empty spaces necessary for the forest function\nresults$blank &lt;- \"                          \"\nresults$smallblank &lt;- \" \"\n\n# forcing some line breaks in column headers using \\n\ncolnames(results) &lt;- c(\n  \"Group\",\n  \"Low dose\\nEvents / N\",\n  \"High dose\\nEvents / N\",\n  \"Comparison\\nEvents / N\",\n  \"Low dose vs comparison\\nRisk ratio (95% CI)\",\n  \"High dose vs comparison\\nRisk ratio (95% CI)\",\n  \"rr1\",\n  \"rr2\",\n  \"lcl1\",\n  \"lcl2\",\n  \"ucl1\",\n  \"ucl2\",\n  \"\",\n  \"\"\n)\n\nIn this forest plot we will include the estimates from both comparisons in the same forest plot (see Figure 1).\n\nforest(\n  results[,c(1,13)],\n  est = list(results$rr1, results$rr2),\n  lower = list(results$lcl1, results$lcl2),\n  upper = list(results$ucl1, results$ucl2),\n  ci_column = 2,\n  ref_line = 1,\n  xlim = c(.5, 1.5),\n  ticks_at = c(.5, .75, 1, 1.25, 1.5)\n)\n\n\n\n\n\n\n\nFigure 1: Forest plot with two sets of results in the same plot\n\n\n\n\n\nAs always we need to specify all the columns we want, do some specific modifications to some cells, etc.\n\ntm &lt;- forest_theme(\n  base_size = 15,\n  ci_pch = 19,\n  ci_lwd = 3,\n  \n  # a color for each comparison to be used for point estimates and 95% CIs\n  ci_col = c(\"#56B4E9\",\"#001d6d\"),\n  \n  # title in legend - set to missing\n  legend_name = \"\",\n  \n  # labels to be used for the two comparisons, notice the space included to add some distance between labels\n  legend_value = c(\"Low dose \", \"High dose\"),\n  \n  # place the legend below the plot\n  legend_position = \"bottom\",\n  refline_gp = gpar(col = \"grey\"),\n  core = list(bg_params = list(fill = c(\"#e2f0fb\",\n                                        \"white\")))\n)\n\np &lt;- forest(\n  results[,c(1,14,2,14,3,14,4,14,5,14,6,13)],\n  est = list(results$rr1, results$rr2),\n  lower = list(results$lcl1, results$lcl2),\n  upper = list(results$ucl1, results$ucl2),\n  ci_column = 12,\n  ref_line = 1,\n  xlim = c(.5, 1.5),\n  ticks_at = c(.5, .75, 1, 1.25, 1.5),\n  nudge_y = .25, # increase distance between points within strata\n  theme = tm\n)\n\n\n# center aligning columns\np &lt;- edit_plot(\n  p,\n  col = 3:11,\n  part = \"header\",\n  which = \"text\",\n  hjust = unit(.5, \"npc\"),\n  x = unit(.5, \"npc\")\n)\n\np &lt;- edit_plot(\n  p,\n  col = 3:11,\n  part = \"body\",\n  which = \"text\",\n  hjust = unit(.5, \"npc\"),\n  x = unit(.5, \"npc\")\n)\n\n# bold facing selected cells in first column\np &lt;- edit_plot(\n  p,\n  col = 1,\n  row = c(1, 2, 5, 8, 11),\n  part = \"body\",\n  which = \"text\",\n  gp = gpar(fontface = \"bold\")\n)\n\n\n\n\n\n\n\n\n\nFigure 2: Forest plot with 3 exposure groups combined in one plot",
    "crumbs": [
      "Home",
      "Three exposure groups - wide version"
    ]
  },
  {
    "objectID": "MultiplePlots.html",
    "href": "MultiplePlots.html",
    "title": "Multiple forest plots",
    "section": "",
    "text": "Setting\nHere is an example of a forest plot containing combined results of risk ratios and -differences for a comparison of two exposure groups from a hypothetical study. Some familiarity with the forestploter package is assumed. The reader might want to look at the simple forest plot before continuing.\n\n\nData\nThe data contain results on number of individuals, events, along with risks for each exposure group and (displayed below) risk ratios and -differences with 95% confidence interval limits.\n\nlibrary(forestploter)\nlibrary(grid)\nlibrary(data.table)\nlibrary(dplyr)\n\nresults &lt;- fread(\"./data/RatioAndDifferenceFPdata.csv\")\n\n# empty spaces necessary for the forest function\nresults$blank &lt;- \"                          \"\nresults$smallblank &lt;- \" \"\n\n# overview of selected variables\nprint(results[,c(1, 8:13)], digits = 5)\n\n            level      rr  rr_lcl  rr_ucl         rd   rd_lcl   rd_ucl\n           &lt;char&gt;   &lt;num&gt;   &lt;num&gt;   &lt;num&gt;      &lt;num&gt;    &lt;num&gt;    &lt;num&gt;\n 1:       Overall 0.68126 0.63348 0.73264 -2.5491968 -3.00210 -2.09630\n 2:           Sex      NA      NA      NA         NA       NA       NA\n 3:        Female 0.63379 0.56410 0.71210 -2.6392561 -3.26455 -2.01396\n 4:          Male 0.71725 0.65356 0.78715 -2.4467261 -3.09398 -1.79947\n 5:           Age      NA      NA      NA         NA       NA       NA\n 6:     &lt;65 years 0.99311 0.70261 1.40373 -0.0049484 -0.25244  0.24254\n 7:     &gt;65 years 0.66629 0.61934 0.71680 -4.3084973 -5.03174 -3.58526\n 8: Heart failure      NA      NA      NA         NA       NA       NA\n 9:            No 0.64108 0.58706 0.70008 -2.3047929 -2.72852 -1.88107\n10:           Yes 0.82404 0.72938 0.93100 -3.8272787 -6.15827 -1.49629\n11:  Hypertension      NA      NA      NA         NA       NA       NA\n12:            No 0.57571 0.48934 0.67732 -2.6357262 -3.34096 -1.93049\n13:           Yes 0.71282 0.65721 0.77314 -2.5150210 -3.08566 -1.94439\n\n\n\nNumbers of events, numbers at risk, and risk estimates are combined to one text variable. Text variables for risk ratios and -differences with 95% confidence intervals are also created. Some indentation is made for selected values of level.\n\nround1 &lt;- function(x) trimws(format(round(x,digits = 1), nsmall = 1, scientific = FALSE))\n\nround2 &lt;- function(x) format(round(x,digits = 2), nsmall = 2, scientific = FALSE)\n\nresults &lt;- results |&gt;\n  mutate(\n    enr1 = case_when(\n      is.na(events1) ~ \"\",\n      .default = paste0(events1, \" / \", n1, \" (\", round1(risk1),\"%)\")\n    ),\n    enr0 = case_when(\n      is.na(events0) ~ \"\",\n      .default = paste0(events0, \" / \", n0, \" (\", round1(risk0),\"%)\")\n    ),\n    rr_z = case_when(\n      is.na(events0) ~ \"\",\n      .default = paste0(round2(rr), \" (\", round2(rr_lcl), \" - \", round2(rr_ucl), \")\")\n    ),\n    rd_z = case_when(\n      is.na(events0) ~ \"\",\n      .default = paste0(round1(rd), \" (\", round1(rd_lcl), \" to \", round1(rd_ucl), \")\")\n    ),\n    level = case_when(is.na(events1) | level == \"Overall\" ~ level, .default = paste(\" \", level))\n  ) |&gt;\n  select(level, enr1, enr0, starts_with(c(\"rr\", \"rd\")), blank, smallblank)\n\nA final touch of the data is to give the columns/variables names that will be reasonable for the forest plot\n\ncolnames(results) &lt;- c(\n  \"Group\",\n  \"Events / N (risk)\",\n  \"Events / N (risk)\",\n  colnames(results)[4:6], # these column names are kept as they are\n  \"\",\n  colnames(results)[8:10], # ... also these\n  \"\",\n  \"\",\n  \"\"\n)\n\nThe data are now ready for plotting.\n\n\nFirst draft\nIn order to get forest to make several forest plots, it is necessary to provide a list of results (point estimates and confidence interval limits). It is furthermore necessary to provide two columns where forest plots should be inserted (ci_column takes a vector of length 2). Note that, generally there are two specifications for parameters other than data in the code snippet below. The risk ratio scale has been log-transformed while the risk difference scale is kept linear - mostly just show it is possible. Note that column 13 (the small blank) is included several times for padding, this might not be strictly necessary.\n\np &lt;- forest(\n  data = results[,c(1,13,2,13,3,13,7,12,13,11,12)],\n  est = list(results$rr, results$rd),\n  lower = list(results$rr_lcl, results$rd_lcl),\n  upper = list(results$rr_ucl, results$rd_ucl),\n  ci_column = c(8, 11),\n  vert_line = list(1, 0),\n  x_trans = c(\"log\", \"none\"),\n  xlim = list(c(.5, 1.5), c(-6.5, 2.5)),\n  ticks_at = list(c(.5, .75, 1, 1.5), c(-5, -2.5, 0, 2.5))\n)\n\n\n\n\n\n\n\n\n\nFigure 1: Forest plot with risk ratios and -differences\n\n\n\n\n\n\n\nPrettification … well aesthetics are subjective anyway\nWe will add some headers, some lines, center some text, make some bold face labels, and tamper with the colors and text sizes using a theme.\n\n# theme specification\ntm &lt;- forest_theme(\n  base_size = 15,\n  ci_pch = 19,\n  ci_lwd = 3,\n  ci_col = \"#6a4a4a\",\n  refline_gp = gpar(col = \"grey\"),\n  core = list(\n    bg_params = list(fill = c(\"#ffe2e3\", \"white\")),\n    padding = unit(unit(c(5,5), \"mm\")) # universal padding around cells in x and y direction\n  ),\n  colhead = list(padding = unit(c(5,7), \"mm\")) # padding in headers\n)\n\np &lt;- forest(\n  data = results[,c(1,13,2,13,3,13,7,12,13,11,12)],\n  est = list(results$rr, results$rd),\n  lower = list(results$rr_lcl, results$rd_lcl),\n  upper = list(results$rr_ucl, results$rd_ucl),\n  ci_column = c(8, 11),\n  vert_line = list(1, 0),\n  x_trans = c(\"log\", \"none\"),\n  xlim = list(c(.5, 1.5), c(-6.5, 2.5)),\n  ticks_at = list(c(.5, .75, 1, 1.5), c(-5, -2.5, 0, 2.5)),\n  theme = tm\n)\n\n# add headers\np &lt;- add_text(\n  p,\n  text = \"Intervention group\",\n  col = 3,\n  row = 0,\n  part = \"header\",\n  gp = gpar(fontface = \"bold\", fontsize = 15)\n)\n\np &lt;- add_text(\n  p,\n  text = \"Control group\",\n  col = 5,\n  row = 0,\n  part = \"header\",\n  gp = gpar(fontface = \"bold\", fontsize = 15)\n)\n\np &lt;- add_text(\n  p,\n  text = \"Risk ratio (95% CI)\",\n  col = 7:8,\n  row = 1,\n  part = \"header\",\n  gp = gpar(fontface = \"bold\", fontsize = 15)\n)\n\np &lt;- add_text(\n  p,\n  text = \"Risk difference (95% CI)\",\n  col = 10:11,\n  row = 1,\n  part = \"header\",\n  gp = gpar(fontface = \"bold\", fontsize = 15)\n)\n\n# center algning relevant columns\np &lt;- edit_plot(\n  p,\n  col = 3:7,\n  part = \"body\",\n  which = \"text\",\n  hjust = unit(.5, \"npc\"),\n  x = unit(.5, \"npc\")\n)\n\n# center aligning the headers in the plot\np &lt;- edit_plot(\n  p,\n  col = 3:7,\n  part = \"header\",\n  which = \"text\",\n  hjust = unit(.5, \"npc\"),\n  x = unit(.5, \"npc\")\n)\n\n# bold facing selected labels\np &lt;- edit_plot(\n  p,\n  col = 1,\n  row = c(1, 2, 5, 8, 11),\n  part = \"body\",\n  which = \"text\",\n  gp = gpar(fontface = \"bold\")\n)\n\n\n\n\n\n\n\n\n\nFigure 2: Custom themed forest plot with risk ratios and -differences",
    "crumbs": [
      "Home",
      "Multiple forest plots"
    ]
  },
  {
    "objectID": "OneSimplePlot.html",
    "href": "OneSimplePlot.html",
    "title": "A simple forest plot",
    "section": "",
    "text": "Setting\nHere is a walk through of how the forestploter package can be used to make a simple forest plot of risk ratios from a study comparing 2 exposure groups. The figure will also include numbers of events and numbers at risk along with risk estimates from the two groups.\n\n\nData\nWe use data from a hypothetical study when two groups have been compared with respect to the risk of some outcome:\n\nlibrary(data.table) # just to load data\nlibrary(forestploter) # to make the forest plots\nlibrary(grid) # necessary for the forestploter package to work\nlibrary(dplyr) # for data manipulation\n\nresults &lt;- fread(\"./data/SimpleFPdata.csv\")\nresults[,-c(4,7)]\n\n            level    n1 events1    n0 events0        rr       lcl       ucl\n           &lt;char&gt; &lt;int&gt;   &lt;int&gt; &lt;int&gt;   &lt;int&gt;     &lt;num&gt;     &lt;num&gt;     &lt;num&gt;\n 1:       Overall 17179     936 31434    2514 0.6812592 0.6334847 0.7326368\n 2:           Sex    NA      NA    NA      NA        NA        NA        NA\n 3:        Female  7947     363 14250    1027 0.6337939 0.5641010 0.7120971\n 4:          Male  9232     573 17184    1487 0.7172526 0.6535601 0.7871523\n 5:           Age    NA      NA    NA      NA        NA        NA        NA\n 6:     &lt;65 years  6868      49 12667      91 0.9931119 0.7026062 1.4037325\n 7:     &gt;65 years 10311     887 18767    2423 0.6662915 0.6193427 0.7167992\n 8: Heart failure    NA      NA    NA      NA        NA        NA        NA\n 9:            No 15522     639 28202    1811 0.6410841 0.5870626 0.7000767\n10:           Yes  1657     297  3232     703 0.8240434 0.7293777 0.9309957\n11:  Hypertension    NA      NA    NA      NA        NA        NA        NA\n12:            No  5117     183  9385     583 0.5757079 0.4893394 0.6773206\n13:           Yes 12062     753 22049    1931 0.7128240 0.6572110 0.7731428\n\n\nAs seen, there are results from an overall analysis, and analyses stratified on sex, age, heart failure and hypertension. Hidden from the output are two columns with risk estimates.\nEssentially, we need to print this data in a table with a forest plot to one side.\n\n\nEmpty spaces\nUsing the forestploter package you need to have a column with no content. This is where the actual forest plot will be inserted, therefore the empty column generally needs to be rather wide. As space between columns with data can be small it is often also a good idea to have a more narrow empty column, which can be used several times if necessary as a buffer between columns:\n\nresults$blank &lt;- \"                          \"\nresults$smallblank &lt;- \" \"\n\n\n\nFirst version\nNow, let’s try to make a forest plot including a column with labels indicating the analysis, risk estimates for each exposure group, and the forest plot.\n\nforest(\n  results[,c(1,4,7,11)],\n  est = results$rr,\n  lower = results$lcl,\n  upper = results$ucl,\n  ci_column = 4,\n  ref_line = 1,\n  xlim = c(.5, 1.5),\n  ticks_at = c(.5, .75, 1, 1.25, 1.5)\n)\n\n\n\n\n\n\n\nFigure 1: Rough outline of a forest plot\n\n\n\n\n\nClearly there is still some work to be done, but before we do that let’s consider what forest does. Think of the output as a table with 4 columns: first the labels, then the risk estimates in exposure groups 1 and 2, then a column with no data. It is into this last column we have inserted the forest plot. Going through the parameters:\n\ndata: here we specify the data we want to use. Notice that we pick a subset of our data set results to be used by writing [,c(1,4,7,11)] after results. Specifically, we use all rows from the data (there is nothing between [ and the first comma), and then we pick the 1st, 4th, 7th and 11th columns in the order they appear in results. The 11th column is the blank column we created above.\nest, lower, and upper: specify the variables used to plot the point estimate and confidence interval.\nci_column: here we specify into which column the plot should be inserted. Here, ci_column = 4 refers to the fact that four columns [c(1,4,7,11)] are selected from the data and that plot should be inserted into the last of those listed, i.e., column number 11 from the data.\nref_line: inserts a vertical reference line at the specified value.\nxlim and ticks_at: specify the range of the axis used in the plot, and where there should be tick marks.\n\n\n\nNumber of events and number at risk\nWe want to include three additional columns into the plot, the exposure-group specific numbers of events and at risk (combined to one column per group), and the risk ratio. Let’s also indent labels for subgroups.\n\n# we want exactly 2 decimal places for all risk ratios and CI-limits, we therefore make a new function.\nround2 &lt;- function(x) format(round(x,digits = 2), nsmall = 2, scientific = FALSE)\n\nresults &lt;- results |&gt;\n  mutate(\n    # events and N at risk in the two groups\n    en1 = case_when(is.na(events1) ~ \"\", .default = paste(events1, \"/\", n1)),\n    en0 = case_when(is.na(events0) ~ \"\", .default = paste(events0, \"/\", n0)),\n    \n    # risk ratio with 95% CI\n    risk_ratio = case_when(\n      is.na(events0) ~ \"\",\n      .default = paste0(round2(rr), \" (\", round2(lcl), \" - \", round2(ucl), \")\")\n    ),\n    \n    # indentation of selected levels\n    level = case_when(is.na(events1) | level == \"Overall\" ~ level, .default = paste(\" \", level))\n  ) |&gt;\n  select(level, en1, risk1, en0, risk0, risk_ratio, rr, lcl, ucl, blank, smallblank)\n\nLet’s make a second version of the forest plot including the extra columns. Notice that because we now use more columns, we need to change where to insert the forest plot (ci_column). This parameter will change several times in the following code snippets.\n\np &lt;- forest(\n  data = results[,c(1:6,10)],\n  est = results$rr,\n  lower = results$lcl,\n  upper = results$ucl,\n  ci_column = 7,\n  ref_line = 1,\n  xlim = c(.5, 1.5),\n  ticks_at = c(.5, .75, 1, 1.25, 1.5)\n)\n\n\n\n\n\n\n\n\n\nFigure 2: Plot including all data\n\n\n\n\n\n\n\nExtra padding between columns\nWith the current settings it seems redundant, however, for the sake of the example a bit of space is inserted between the 1st and 2nd, between then 3rd and 4th, and between the 5th and 6th columns. We use the smallblank column for this.\n\np &lt;- forest(\n  data = results[,c(1,11,2,3,11,4,5,11,6,10)], # column 11 (smallblank) inserted several times for padding\n  est = results$rr,\n  lower = results$lcl,\n  upper = results$ucl,\n  ci_column = 10,\n  ref_line = 1,\n  xlim = c(.5, 1.5),\n  ticks_at = c(.5, .75, 1, 1.25, 1.5)\n)\n\n\n\n\n\n\n\n\n\nFigure 3: Plot with added padding\n\n\n\n\n\n\n\nColumn headers\nThis looks exceptionally stupid. Figure 3 holds all the data we want to include but the smallblank-columns take up way too much space. However, editing the column headers will help with this. We will edit these by naming the columns (variables) of the data set results:\n\ncolnames(results) &lt;- c(\n  \"Group\",\n  \"Events / N at risk\",\n  \"Risk (95% CI)\",\n  \"Events / N at risk\",\n  \"Risk (95% CI)\",\n  \"\",\n  \"rr\",\n  \"lcl\",\n  \"ucl\",\n  \"\",\n  \"\"\n)\n\nNotice how we shamelessly use the same, sometime empty, name for several columns. This is intentional.\nIf we once again run the forest function on these data we get Figure 4.\n\n\n\n\n\n\n\n\nFigure 4: Plot with custom headers\n\n\n\n\n\n\n\nFurther headers\n\nExposure group headers\nIn Figure 4 we can’t tell which columns refer to which exposure group. We can make that clear by manipulating the plot p using the functions add_text and add_border from the forestploter package. Specifically, we want to add additional headers spanning several columns. We also add a line between data and headers for each exposure group - this is probably not strictly necessary in this situation, but it can be helpful to guide the eye.\n\np &lt;- forest(\n  data = results[,c(1,11,2,3,11,4,5,11,6,10)],\n  est = results$rr,\n  lower = results$lcl,\n  upper = results$ucl,\n  ci_column = 10,\n  ref_line = 1,\n  xlim = c(.5, 1.5),\n  ticks_at = c(.5, .75, 1, 1.25, 1.5)\n)\n\n# we add a header for the intervention- and exposure groups\np &lt;- add_text(\n  p,\n  text = \"Intervention group\",\n  col = 3:4, # the text should be across these columns\n  row = 0, # ... and in this row\n  part = \"header\",\n  gp = gpar(fontface = \"bold\", fontsize = 15) # style of the text - see documentation of gpar for further details\n)\n\np &lt;- add_text(\n  p,\n  text = \"Control group\",\n  col = 6:7,\n  row = 0,\n  part = \"header\",\n  gp = gpar(fontface = \"bold\", fontsize = 15)\n)\n\n# we add a line between the header and the data for both exposure groups\np &lt;- add_border(\n  p,\n  part = \"body\",\n  gp = gpar(lwd = .5), # line width\n  row = 0,\n  col = c(3, 4, 6, 7)\n)\n\n\n\n\n\n\n\n\n\nFigure 5: Plot with exposure group headers\n\n\n\n\n\n\n\nCombined header for risk ratio and plot\nThe last header we want to add is one spanning the columns with risk ratios (reported numerically and graphically)\n\np &lt;- add_text(\n  p,\n  text = \"Risk ratio (95% CI)\",\n  col = 9:10,\n  row = 1,\n  part = \"header\",\n  gp = gpar(fontface = \"bold\")\n)\n\n\n\n\n\n\n\n\n\nFigure 6: Plot with header for risk ratios\n\n\n\n\n\n\n\n\nFinishing touches\nThere are still several things that would improve the plot. In the following we\n\ncenter-align columns containing numbers,\nmake labels without indentation bold face,\nspecify a theme using theme_forest to modify general aspects of the plot (next code chunk).\n\n\n# center aligning the numbers (body) in the plot\np &lt;- edit_plot(\n  p,\n  col = 3:7,\n  part = \"body\",\n  which = \"text\",\n  hjust = unit(.5, \"npc\"),\n  x = unit(.5, \"npc\")\n)\n\n# center aligning the headers in the plot\np &lt;- edit_plot(\n  p,\n  col = 3:7,\n  part = \"header\",\n  which = \"text\",\n  hjust = unit(.5, \"npc\"),\n  x = unit(.5, \"npc\")\n)\n\n# bold facing selected labels\np &lt;- edit_plot(\n  p,\n  col = 1,\n  row = c(1, 2, 5, 8, 11),\n  part = \"body\",\n  which = \"text\",\n  gp = gpar(fontface = \"bold\")\n)\n\nThe theme is something that needs to be added when running forest meaning this should be done at the top of the script. Here is the entire script necessary to make Figure 7, once the data has been set up:\n\n# specifying the theme\ntm &lt;- forest_theme(\n  base_size = 15, # size of text\n  ci_pch = 19, # shape of point estimate (19 = circle)\n  ci_lwd = 3.5, # line width of CI\n  ci_col = \"#58508d\", # color of the point estimate and CI\n  refline_gp = gpar(col = \"grey\"), # color of reference line\n  core = list(bg_params = list(fill = c(\"#f6f1ff\", \"white\"))) # alternating colors of stripes\n)\n\n# constructing the basic forest plot\np &lt;- forest(\n  data = results[,c(1,11,2,3,11,4,5,11,6,10)],\n  est = results$rr,\n  lower = results$lcl,\n  upper = results$ucl,\n  ci_column = 10,\n  ref_line = 1,\n  xlim = c(.5, 1.5),\n  ticks_at = c(.5, .75, 1, 1.25, 1.5),\n  theme = tm # use the custom theme\n)\n\n# add headers\np &lt;- add_text(\n  p,\n  text = \"Intervention group\",\n  col = 3:4,\n  row = 0,\n  part = \"header\",\n  gp = gpar(fontface = \"bold\", fontsize = 15)\n)\n\np &lt;- add_text(\n  p,\n  text = \"Control group\",\n  col = 6:7,\n  row = 0,\n  part = \"header\",\n  gp = gpar(fontface = \"bold\", fontsize = 15)\n)\n\np &lt;- add_text(\n  p,\n  text = \"Risk ratio (95% CI)\",\n  col = 9:10,\n  row = 1,\n  part = \"header\",\n  gp = gpar(fontface = \"bold\", fontsize = 15)\n)\n\n# add borders under selected headers\np &lt;- add_border(\n  p,\n  part = \"body\",\n  gp = gpar(lwd = .5), #line width\n  row = 0,\n  col = c(3, 4, 6, 7)\n)\n\n# center aligning the numbers (body) in the plot\np &lt;- edit_plot(\n  p,\n  col = 3:7,\n  part = \"body\",\n  which = \"text\",\n  hjust = unit(.5, \"npc\"),\n  x = unit(.5, \"npc\")\n)\n\n# center aligning the headers in the plot\np &lt;- edit_plot(\n  p,\n  col = 3:7,\n  part = \"header\",\n  which = \"text\",\n  hjust = unit(.5, \"npc\"),\n  x = unit(.5, \"npc\")\n)\n\n# bold facing selected labels\np &lt;- edit_plot(\n  p,\n  col = 1,\n  row = c(1, 2, 5, 8, 11),\n  part = \"body\",\n  which = \"text\",\n  gp = gpar(fontface = \"bold\")\n)\n\n\n\n\n\n\n\n\n\nFigure 7: Finished forest plot with custom theme",
    "crumbs": [
      "Home",
      "A simple forest plot"
    ]
  },
  {
    "objectID": "ThreeGroupsV1.html",
    "href": "ThreeGroupsV1.html",
    "title": "Three exposure groups - long version",
    "section": "",
    "text": "Setting\nHere is an example of a forest plot containing combined results of risk ratios for a comparison of three exposure groups (high dose, low dose, control, say) from a hypothetical study. These data are in long format, there is also a version in wide format. Some familiarity with the forestploter package is assumed. The reader might want to look at the simple forest plot before continuing.\n\n\nData\nThis version of the data is in long format, meaning each exposure group contributes with a row/observation for each subgroup that has been analyzed.\n\nlibrary(forestploter)\nlibrary(grid)\nlibrary(data.table)\nlibrary(dplyr)\n\nresults &lt;- fread(\"./data/TwoComparisonFPdataLong.csv\")\n\n# overview of selected variables - first 10 observations\nprint(results[1:10,c(1:4,6:8)], digits = 5)\n\n         level     x     n events      rr     lcl     ucl\n        &lt;char&gt; &lt;int&gt; &lt;int&gt;  &lt;int&gt;   &lt;num&gt;   &lt;num&gt;   &lt;num&gt;\n 1:    Overall    NA    NA     NA      NA      NA      NA\n 2:                0 20400   1634      NA      NA      NA\n 3:                1 22150   1198 0.67524 0.62828 0.72571\n 4:                2  6063    484 0.99663 0.90424 1.09847\n 5: Sex Female    NA    NA     NA      NA      NA      NA\n 6:                0  9243    681      NA      NA      NA\n 7:                1 10143    472 0.63160 0.56358 0.70783\n 8:                2  2811    196 0.94637 0.81198 1.10301\n 9:   Sex Male    NA    NA     NA      NA      NA      NA\n10:                0 11157    953      NA      NA      NA\n\n\nThe data needs a bit of editing before it is ready to be plugged into forest.\n\nround2 &lt;- function(x) format(round(x,digits = 2), nsmall = 2, scientific = FALSE)\n\nresults &lt;- results |&gt;\n  mutate(\n    x = case_when(x == 0 ~ \"Control\",\n                  x == 1 ~ \"Low dose\",\n                  x == 2 ~ \"High dose\",\n                  .default = \"\"),\n    eventsn = case_when(is.na(events) ~ \"\",\n                        .default = paste(events, \"/\", n)),\n    riskratio = case_when(\n      is.na(events) ~ \"\",\n      is.na(rr) ~ \"(ref)\",\n      .default = paste0(round2(rr), \" (\", round2(lcl), \" - \", round2(ucl), \")\"))\n  ) |&gt;\n  select(level, x, eventsn, risk, riskratio, rr, lcl, ucl)\n\n# empty spaces necessary for the forest function\nresults$blank &lt;- \"                          \"\nresults$smallblank &lt;- \" \"\n\ncolnames(results) &lt;- c(\n  \"\",\n  \"Exposure group\",\n  \"Events / N\",\n  \"Risk (95% CI)\",\n  \"\",\n  \"rr\",\n  \"lcl\",\n  \"ucl\",\n  \"\",\n  \"\"\n)\n\nThe data are ready to be plotted. In the theme we specify 4 colors for stripe-alternation; dark for subgroup header, white-light-white for specific exposure groups.\n\ntm &lt;- forest_theme(\n  base_size = 15,\n  ci_pch = 19, \n  ci_lwd = 3,\n  ci_col = \"#58508d\",\n  refline_gp = gpar(col = \"grey\"),\n  core = list(bg_params = list(fill = c(\"#ccc4e2\",\n                                        \"white\",\n                                        \"#f3eeff\",\n                                        \"white\"))) # 4 alternating colors of stripes\n)\n\np &lt;- forest(\n  results[,c(1,2,10,3,10,4,10,5,9)],\n  est = results$rr,\n  lower = results$lcl,\n  upper = results$ucl,\n  ci_column = 9,\n  ref_line = 1,\n  xlim = c(.5, 1.5),\n  ticks_at = c(.5, .75, 1, 1.25, 1.5),\n  theme = tm\n)\n\n# add header for risk ratio / forest plot\np &lt;- add_text(\n  p,\n  col = 8:9,\n  row = 1,\n  part = \"header\",\n  text = \"Risk ratio (95% CI)\",\n  gp = gpar(fontface = \"bold\", fontsize = 15)\n)\n\n# center aligning columns\np &lt;- edit_plot(\n  p,\n  col = 4:8,\n  part = \"header\",\n  which = \"text\",\n  hjust = unit(.5, \"npc\"),\n  x = unit(.5, \"npc\")\n)\n\np &lt;- edit_plot(\n  p,\n  col = 4:8,\n  part = \"body\",\n  which = \"text\",\n  hjust = unit(.5, \"npc\"),\n  x = unit(.5, \"npc\")\n)\n\n# bold facing first column\np &lt;- edit_plot(\n  p,\n  col = 1,\n  part = \"body\",\n  which = \"text\",\n  gp = gpar(fontface = \"bold\")\n)\n\n\n\n\n\n\n\n\n\nFigure 1: Forest plot with 3 exposure groups",
    "crumbs": [
      "Home",
      "Three exposure groups - long version"
    ]
  },
  {
    "objectID": "ggplot2.html",
    "href": "ggplot2.html",
    "title": "Forest plots using ggplot2 and patchwork",
    "section": "",
    "text": "The basic plot\nFrequent users of ggplot2 might prefer not to use forestploter but instead rely on more familiar packages. It is fairly straightforward to make a forest plot using ggplot2 and patchwork. First, let’s try to assemble a forest plot including a column of labels, columns with risk estimates in the intervention and control group, and a forest plot of risk ratios. The data are the same that were used for the simple plot, which readers are advised to look at before continuing:\n\nlibrary(data.table)\nlibrary(ggplot2)\nlibrary(patchwork)\nlibrary(dplyr)\n\n# theme_void is used by default as axes, ticks etc. are superfluous\n# to make stripes in the forest plot align across columns, the x-axis must exist - but we hide it\ntheme_set(\n  theme_void(base_size = 15) +\n    theme(\n      axis.line.x = element_line(color = \"transparent\"),\n      axis.text.x = element_text(color = \"transparent\"),\n      axis.ticks.x = element_line(color = \"transparent\"),\n      axis.ticks.length.x = unit(2, \"mm\")\n    )\n)\n\n# text size within the forest plot\ntsize &lt;- 6\n\ndt &lt;- fread(\"./data/SimpleFPdata.csv\") |&gt;\n  mutate(\n    # a variable used to control rows (y-axis) in the plot\n    y = n() - row_number(),\n    \n    # which levels should have indentation (and not be bold face)\n    indent = case_when(is.na(events1) | level == \"Overall\" ~ 0,\n                       .default = 1),\n    \n    # adding indentation\n    level = case_when(indent == 1 ~ paste(\"  \", level),\n                      .default = level),\n    \n    # variable to control bold face vs. plain labeling\n    boldface = case_when(indent == 0 ~ \"bold\",\n                         .default = \"plain\")\n  )\n\nOne simple way to make a forest plot using ggplot2 and patchwork is to simply make a plot for each column to be included, and then patching them together afterwards:\n\n# column with labels, the x-value is arbitrary (also below)\nlabels &lt;- ggplot(dt, aes(x = 0, y = y, label = level, fontface = boldface)) +\n  # the labels should be left justified\n  geom_text(hjust = 0, size = tsize) +\n  # setting the minimum x-value to 0 [same as x-value in aes()] for aesthetic reasons\n  coord_cartesian(xlim = c(0, 1))\n\n# column with risk estimates in the intervention group\nrisk1 &lt;- ggplot(dt, aes(x = 1, y = y, label = risk1)) +\n  geom_text(size = tsize) +\n  ggtitle(\"Risk (95% CI) in the\\nintervention group\") +\n  # the column title is centered\n  theme(plot.title = element_text(hjust = .5))\n\n# column with risk estimates in the control group\nrisk0 &lt;- ggplot(dt, aes(x = 1, y = y, label = risk0)) +\n  geom_text(size = tsize) +\n  ggtitle(\"Risk (95% CI) in the\\ncontrol group\") +\n  theme(plot.title = element_text(hjust = .5))\n\n# forest plot of risk ratios\nfp &lt;- ggplot(dt, aes(x = rr, xmin = lcl, xmax = ucl, y = y)) +\n  geom_vline(xintercept = 1, color = \"grey\", linetype = 2) +\n  geom_pointrange(color = \"#58508d\", linewidth = 1.5) +\n  # we need to show the x-axis for this particular plot\n  theme(axis.line.x = element_line(color = \"black\"),\n        axis.text.x = element_text(color = \"black\"),\n        axis.ticks.x = element_line(color = \"black\"),\n        axis.ticks.length = unit(2, \"mm\"),\n        plot.title = element_text(hjust = .5)) +\n  ggtitle(\"\\nRisk ratio with 95% CI\")\n\n# patching the columns together\nforest_plot &lt;- (labels | risk1 | risk0 | fp) +\n  plot_layout(widths = c(1, 1, 1, 1.5))\n\n\n\n\n\n\n\n\n\nFigure 1: Basic forest plot using ggplot2 and patchwork\n\n\n\n\n\nSo far so good, but there are no stripes. One observation before we add those: the second and third column are in principle made the same way so it would be sensible to construct these using a function, we will do that below.\nAlternating stripes are easy to add to the individual column using geom_rect, on a derived data set:\n\n# select every other row, here the even numbered rows\n# to get event numbered rows filter on `y %% 2 == 1`\nstripesdt &lt;- dt |&gt;\n  filter(y %% 2 == 0)\n\nUsing this stripesdt we can make a function that will produce generic columns with text and stripes:\n\ncolfun &lt;- function(var, title){\n\n  col &lt;- ggplot(dt, aes(x = 1, y = y, label = {{var}})) +\n    # adding rectangles spanning the entire x-axis for half the rows\n    geom_rect(data = stripesdt,\n              aes(xmin = -Inf, xmax = Inf, ymin = y - .5, ymax = y + .5),\n              fill = \"#f6f1ff\") +    geom_text(size = tsize) +\n    geom_text(size = tsize) +\n    ggtitle(title) +\n    theme(plot.title = element_text(hjust = .5))\n\n  return(col)\n}\n\nWe can now make a striped version of the column with labels; use colfun to make striped version of the risk-columns; make a striped version of the forest plot; and finally patch it all up:\n\nlabels_stripes &lt;- ggplot(dt, aes(x = 0, y = y, label = level, fontface = boldface)) +\n  geom_rect(data = stripesdt,\n            aes(xmin = -Inf, xmax = Inf, ymin = y - .5, ymax = y + .5),\n            fill = \"#f6f1ff\") +\n  geom_text(hjust = 0, size = tsize) +\n  coord_cartesian(xlim = c(0, 1))\n\nrisk1_stripes &lt;- colfun(risk1, \"Risk (95% CI) in the\\nintervention group\")\nrisk0_stripes &lt;- colfun(risk0, \"Risk (95% CI) in the\\ncontrol group\")\n\nfp_stripes &lt;- ggplot(dt, aes(x = rr, xmin = lcl, xmax = ucl, y = y)) +\n  geom_rect(data = stripesdt,\n            aes(xmin = -Inf, xmax = Inf, ymin = y - .5, ymax = y + .5),\n            fill = \"#f6f1ff\") +\n  geom_vline(xintercept = 1, color = \"grey\", linetype = 2) +\n  geom_pointrange(color = \"#58508d\", linewidth = 1.5) +\n  theme(axis.line.x = element_line(color = \"black\"),\n        axis.text.x = element_text(color = \"black\"),\n        axis.ticks.x = element_line(color = \"black\"),\n        axis.ticks.length.x = unit(2, \"mm\"),\n        plot.title = element_text(hjust = .5)) +\n  ggtitle(\"\\nRisk ratio with 95% CI\")\n\n\n# patching the columns together\nplot_stripes &lt;- (labels_stripes | risk1_stripes | risk0_stripes | fp_stripes) +\n  plot_layout(widths = c(1, 1, 1, 1.5))\n\n\n\n\n\n\n\n\n\nFigure 2: Forest plot with stripes\n\n\n\n\n\nEt voila! A forest plot which could in principle be presented as final.\n\n\nThe slightly more advanced plot\nIt might be necessary to introduce a few additional columns. Let us reload the data and tinker with some variables. Specifically, we want to have text variables combining numbers of events and at risk in each group, and also a text variable with risk ratios. For the sake of the example, we also want to cap the confidence intervals when they get below 0.5 or above 1.25:\n\nrm(list = ls()[!(ls() %in% c(\"tsize\", \"colfun\"))])\n\nround2 &lt;- function(x) format(round(x,digits = 2), nsmall = 2, scientific = FALSE)\n\ndt &lt;- fread(\"./data/SimpleFPdata.csv\") |&gt;\n  mutate(\n    # events and N at risk in the two groups\n    en1 = case_when(is.na(events1) ~ \"\", .default = paste(events1, \"/\", n1)),\n    en0 = case_when(is.na(events0) ~ \"\", .default = paste(events0, \"/\", n0)),\n    \n    # risk ratio with 95% CI\n    risk_ratio = case_when(\n      is.na(events0) ~ \"\",\n      .default = paste0(round2(rr), \" (\", round2(lcl), \" - \", round2(ucl), \")\")\n    ),\n    \n    y = n() - row_number(),\n    indent = case_when(is.na(events1) | level == \"Overall\" ~ 0,\n                       .default = 1),\n    level = case_when(indent == 1 ~ paste(\"  \", level),\n                      .default = level),\n    boldface = case_when(indent == 0 ~ \"bold\",\n                         .default = \"plain\"),\n    \n    # mark which confidence interval reach beyond the scale of the figure\n    left_arrow = case_when(lcl &lt; .5 ~ 1,\n                           .default = 0),\n    right_arrow = case_when(ucl &gt; 1.25 ~ 1,\n                            .default = 0),\n    \n    # truncate intervals\n    lcl = case_when(left_arrow == 1 ~ .5,\n                    .default = lcl),\n    ucl = case_when(right_arrow == 1 ~ 1.25,\n                    .default = ucl)\n  )\n\nstripesdt &lt;- dt |&gt;\n  filter(y %% 2 == 0)\n\nWe recreate the columns we had already made, plus columns with counts of events and individuals at risk, and risk ratios:\n\n# labels\nlabels &lt;- ggplot(dt, aes(x = 0, y = y, label = level, fontface = boldface)) +\n  geom_rect(data = stripesdt,\n            aes(xmin = -Inf, xmax = Inf, ymin = y - .5, ymax = y + .5),\n            fill = \"#f6f1ff\") +\n  geom_text(hjust = 0, size = tsize) +\n  coord_cartesian(xlim = c(0, 1)) +\n  # an empty title is added to make elements align when wrapping and patching below\n  ggtitle(\"\")\n\n# columns for the intervention groups\neventsN1 &lt;- colfun(en1, \"Events / N\")\nrisk1 &lt;- colfun(risk1, \"Risk (95% CI)\")\n\n# columns for the control groups\neventsN0 &lt;- colfun(en0, \"Events / N\")\nrisk0 &lt;- colfun(risk0, \"Risk (95% CI)\")\n\nriskRatio &lt;- colfun(risk_ratio, \"\") \n\n# the forest plot - with arrows (geom_segment) on capped intervals\nfp &lt;- ggplot(dt, aes(x = rr, xmin = lcl, xmax = ucl, y = y)) +\n  geom_rect(data = stripesdt,\n            aes(xmin = -Inf, xmax = Inf, ymin = y - .5, ymax = y + .5),\n            fill = \"#f6f1ff\") +\n  \n  geom_vline(xintercept = 1, color = \"grey\", linetype = 2) +\n  geom_pointrange(color = \"#58508d\", linewidth = 1.5) +\n  \n  # insert arrow at intervals truncated to the left\n  geom_segment(data = subset(dt, left_arrow == 1),\n               aes(xend = lcl, yend = y),\n               arrow = arrow(length = unit(.25, \"cm\")),\n               color = \"#58508d\",\n               linewidth = 1.5) +\n  \n  # insert arrow at intervals truncated to the right\n  geom_segment(data = subset(dt, right_arrow == 1),\n               aes(xend = ucl, yend = y),\n               arrow = arrow(length = unit(.25, \"cm\")),\n               color = \"#58508d\",\n               linewidth = 1.5) +\n  \n  # specify breaks on the x-axis\n  scale_x_continuous(breaks = c(.5, .75, 1, 1.25),\n                     limits = c(.5, 1.25)) +\n  \n  theme(axis.line.x = element_line(color = \"black\"),\n        axis.text.x = element_text(color = \"black\"),\n        axis.ticks.x = element_line(color = \"black\"),\n        axis.ticks.length.x = unit(2, \"mm\"))\n\nWe now have the individual columns we want in our plot. However, to distinguish columns from the intervention- and control groups, we add an extra header spanning these columns using wrap_elements. Similarly, a header for the risk ratio text- and plot-columns is added. This messes up the alignment with the labels column, which is therefore wrapped and annotated by itself to restore alignment.\n\n# labels are wrapped and annotated by themselves to restore alignment of rows\nlabels_wrap &lt;- wrap_elements(\n  (labels) +\n    plot_annotation(title = \"\")\n)\n\n# common headers are added for the intervention group columns\neventsNrisk1 &lt;- wrap_elements(\n  (eventsN1 | risk1) +\n    plot_annotation(title = \"Intervention group\") &\n    theme(plot.title = element_text(hjust = .5, face = \"bold\"))\n)\n\n# and the control group columns\neventsNrisk0 &lt;- wrap_elements(\n  (eventsN0 | risk0) +\n    plot_annotation(title = \"Control group\") &\n    theme(plot.title = element_text(hjust = .5, face = \"bold\"))\n)\n\n# and finally for the risk ratio columns\nriskRatiofp &lt;- wrap_elements(\n  (riskRatio | fp) +\n    plot_annotation(title = \"Risk ratio (95% CI)\") &\n    theme(plot.title = element_text(hjust = .5, face = \"bold\"))\n)\n\n# everything is patched up together to get the final plot.\nfinalplot &lt;- (labels_wrap | eventsNrisk1 | eventsNrisk0 | riskRatiofp) +\n  plot_layout(widths = c(.4, 1, 1, 1.5)) +\n  # some margin is added to the right to prevent tick values being cut\n  theme(plot.margin = margin(r = .5, unit = \"cm\"))\n\n\n\n\n\n\n\n\n\nFigure 3: Fully fledged forest plot\n\n\n\n\n\nNote that the various parameters, i.e., tsize, base_size, relative widths, etc., generally need fine-tuning. The values used in this example are not universally valid.",
    "crumbs": [
      "Home",
      "Forest plots using `ggplot2` and `patchwork`"
    ]
  }
]